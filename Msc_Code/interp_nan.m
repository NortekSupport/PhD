function [y,propnan]=interp_nan(x,max_propnan,nearest)if ~exist('nearest')    nearest=0;endif ~exist('max_propnan')  max_propnan=1;endsz=size(x);if length(sz)>2  x=reshape(x,[sz(1) prod(sz(2:length(sz)))]);endfor ii=1:length(x(1,:));  if nearest      good_inds=find(~isnan(x(:,ii)));      bad_inds=find(isnan(x(:,ii)));      x(bad_inds)=interp1(good_inds,x(good_inds),bad_inds,'nearest');      x(1:good_inds(1)-1)=x(good_inds(1));      x(good_inds(end)+1:end)=x(good_inds(end));  else  inds=find(isnan(x(:,ii)));  propnan(ii)=length(inds)/length(x(:,1));  if propnan(ii)<max_propnan    if ~isempty(inds)      block=[inds(1)-1 inds(1)+1];      no_blocks=1;      for jj=2:length(inds)        if inds(jj)-inds(jj-1)>1          block(no_blocks,2)=inds(jj-1)+1;          no_blocks=no_blocks+1;          block(no_blocks,1)=inds(jj)-1;        end      end      block(no_blocks,2)=inds(length(inds))+1;      startind=1;      finind=no_blocks;      if block(1,1)==0        x(1:block(1,2),ii)=x(block(1,2),ii);        startind=2;      end      if block(no_blocks,2)==length(x(:,1))+1        x(block(no_blocks,1):length(x(:,1)),ii)=x(block(no_blocks,1),ii);        finind=no_blocks-1;      end      for jj=startind:finind        x(block(jj,1):block(jj,2),ii)=...          linspace(x(block(jj,1),ii),x(block(jj,2),ii),diff(block(jj,:))+1)';%          my_linspace(x(block(jj,1),ii),x(block(jj,2),ii),diff(block(jj,:))+1)';      end    end  else    x(:,ii)=nan*x(:,ii);  end  endendy=x;if length(sz)>2  y=reshape(y,sz(2:length(sz)));  propnan=reshape(propnan,sz(2:length(sz)));end