%Calculate volumes from pneumatophore point cloud reconstructions
%V_cyl = pi*r^2*z, where r is the radius of the individual pneumatophore,
%and z is the height, which increases from 0:0.005:z.
clear, close all
ddir = 'C:/Users/bkn5/Projects/Mekong_F2014/Images/Quadrats/Reconstructions/Q5.9/';
fdir = 'C:/Users/bkn5/Projects/Mekong_F2014/Figures/Quadrats/';
load([ddir 'Q5_9stats_fixed.mat'])
DATA = rmfield(DATA,'info'); %remove info field for processing
h = 0.005; %spacing between layers (m)
fn = fieldnames(DATA);n = length(fn);
H = h:h:h*n; %vector of heights to max H

%(x,y,z) points of VecPros in the Quadrat, measured in CloudCompare
%[VP1 VP2 VP3]
vpx = [0.8033 0.5997 0.4978;0.8033 0.5997 0.4978;0.8033 0.5997 0.4978];
vpy = [0.245 0.245 0.245;0.245 0.245 0.245;0.254 0.254 0.254;];
vpz = [0.062 0.063 0.061;0.25 0.25 0.25;0.46 0.46 0.46]; %relative to the top of the quadrat, where the model bed level is initialized

%now integrate: r is the average radius, Z is Z(i)*0.005m
%i is the slice #, j is the number of stems per slice. Multiply the height
%interval by the slice radius squared * pi to calculate the cylindrical
%volume over that distance. Frontal area is simply the diameter of the slice
%times the height interval. Sum all the layers together to get phi and a,
%respectively.

%plot cylinders as volumes to show the process for estimating veg. volumes
f1 = figure;
set(f1,'PaperOrientation','portrait',...
    'position',[400 200   1000   800]);
set(gcf,'color','w','PaperPositionMode','auto')
c = paruly(n);colormap(paruly)
%generate 'ground' and borders in figure
patch([0 1 1 0],[0 0 1 1],[0.85 0.85 0.85])
patch([0 0 0 0],[1 0 0 1],[0 0 1 1],[0.85 0.85 0.85])
patch([1 0 0 1],[1 1 1 1],[0 0 1 1],[0.85 0.85 0.85])
hold on

f(1) = scatter3(vpx(1,:),vpy(1,:),vpz(1,:),200,'^');
set(f(1),'MarkerEdgeColor','k',...
        'MarkerFaceColor',[1 0.9 0])
f(2) = scatter3(vpx(2,:),vpy(2,:),vpz(2,:),200,'^');
set(f(2),'MarkerEdgeColor','k',...
        'MarkerFaceColor',[1 0 0.8])
f(3) = scatter3(vpx(3,:),vpy(3,:),vpz(3,:),200,'^');
set(f(3),'MarkerEdgeColor','k',...
        'MarkerFaceColor',[0 0.8 1])

for i = 1:n
    [nn,~] = size(DATA.(fn{i}).Rcenter);
    for j = 1:nn
        x = DATA.(fn{i}).Rcenter(j,1);
        y = DATA.(fn{i}).Rcenter(j,2);
        r = mean(DATA.(fn{i}).Rradii(j,:));
        lmin = DATA.(fn{i}).Layerminh;
        lmax = DATA.(fn{i}).Layermaxh;
        Vcyl(i,j) = pi*r^2*h;
        fA(i,j) = 2*r*h;
        D(i,j) = mean(DATA.(fn{i}).Rradii(j,:),2)*2;
        
        %plot filled cylinders
        coords = meshgrid(linspace(0,2*pi),linspace(0,2*pi));
        X = r.*cos(coords);X = X+x; %transforms X coord to rcenter(x,~)
        Y = r.*sin(coords);Y = Y+y; %transforms Y coord to rcenter(~,y)
        Z = meshgrid(linspace(lmin,lmax),linspace(lmin,lmax))';
        cyl = surf(X,Y,Z);hold on
        set(cyl,'FaceColor',c(i,:),'FaceAlpha',1,'EdgeAlpha',0);
        p(1) = patch(X(1,:),Y(1,:),Z(1,:),Z(1,:)); %top of volume 
        p(2) = patch(X(end,:),Y(end,:),Z(end,:),Z(end,:)); %bottom of volume
        set((p),'FaceColor',c(i,:),'EdgeColor',[0 0 0],'EdgeAlpha',0.5);
        
    end
    vcyl(i,:) = sum(Vcyl(i,:));
    A(i,:) = sum(fA(i,:));
    
end
% cb = colorbar('eastoutside');
caxis([0 n])
% set(cb,'position',[0.825 0.1 0.02 0.8],'LineWidth',1.5)
%ylabel(cb,'Slice Number','FontSize',16)

leg = legend([f(3) f(2) f(1)],'\bf\itDay 3','\bf\itDay 2','\bf\itDay 1');
set(leg,'box','off','position',[0.68 0.75 0.025 0.025],'FontSize',18)
zlabel('Height Above Bed (m)','FontSize',16)
% xlabel('Along-shore Distance (m)','FontSize',16)
% ylabel('Cross-shore Distance (m)','FontSize',16)
set(gca,'LineWidth',1.5,'FontSize',16,'XLim',[0 1],'YLim',[0 1],'ZLim',[0 1])
grid on
hold off
axis([0 1 0 1 0 1])
set(gca,'position',[0.1 0.1 0.7 0.8])
view(10,10)
%  view(0,0)
% export_fig([fdir 'Q2A_Volume_oblique'],'-pdf','-nocrop','-m1','-r300','-q65')

%Quadrat statistics:
phi = sum(vcyl)/1; %unitless
a = sum(A)/1; %m^-1; area/1 unit volume (1m^3)
d = mean(D(1,:)); %mean diameter of layer 1 
disp(['Number of stems in first slice (n): ' num2str(length(DATA.layer1.Rcenter))])
disp(['Mean stem diameter of first slice (d): ' num2str(d)])
disp(['Frontal area density of vegetation (a): ' num2str(a)])
disp(['Volume fraction occupied by vegetation (phi): ' num2str(phi)])

export_fig([fdir 'Q2B_instLocVols_oblique'],'-png','-native')


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%The following code was designed to calculate volumes of individual
%pneumatophores. In many datasets, the ID field does not exist for all
%layers, making this method defunct. I'm keeping this code because it could
%be useful for estimating the volume of particular elements in the future.

% centers = double(DATA.layer1.ID); %centers of the radii of the pneumatophores at slice 1
% %we need to find the 'height' of the pneumatophores. Do this by extracting
% %the index where the intersection of the centers of the first slice no
% %longer intersect with the centers of slice(j).
% m = length(centers)-1;
% idx = zeros(m,n);
% idx(:,1) = ones(1,m);
% Z = zeros(1,m);
% for i = 1:m
%     for j = 2:n
%         idx(i,j) = any(intersect(centers(i),DATA.(fn{j}).ID));
%         z = find(idx(i,:)==1,1,'last');
%         %z is the last point where the intersect of centers and slice(j) is
%         %not an empty matrix (i.e. where the pneumatophore ends).
%         if isempty(z)
%             Z(i) = n;
%         else
%             Z(i) = z;
%         end
%     end
% end
% %plot individual pneumatophores
% for i = 1:m
%     for j = 1:Z(i)
%         id = find(intersect(centers(i),DATA.(fn{j}).ID) == DATA.(fn{j}).ID);
%         x = DATA.(fn{j}).Rcenter(id,1);
%         y = DATA.(fn{j}).Rcenter(id,2);
%         r = mean(DATA.(fn{j}).Rradii(id,:));
%         ang=0:0.01:2*pi;
%         xp=r*cos(ang);
%         yp=r*sin(ang);
%         Hm = repmat(H(j),1,length(xp));
%         p = plot3(x+xp,y+yp,Hm);
%         hold on
%     end
% end
% 
